<!DOCTYPE html>
<meta charset="utf-8">

<style>

svg {
  border: 1px solid #f0f
}

.cDivs {
  stroke: #d0d0d0;
  fill: none;
}

</style>

<body>
</body>

<script src="https://d3js.org/d3.v4.min.js"></script>

<script src="https://d3js.org/topojson.v1.min.js"></script>


<script>

// real stuff
//

var margin = {top: 20, right: 10, bottom: 20, left: 10};

var width = 960 - margin.left - margin.right,
    height = 500 - margin.top - margin.bottom;

var svg = d3.select("body").append("svg")
    .attr("width", width + margin.left + margin.right)
    .attr("height", height + margin.top + margin.bottom)
  .append("g")
    .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

var threshold = d3.scaleThreshold()
    // .domain([0.01, ,1, 3, 5,10])
    .domain([-4, -2, 0, 2, 4])
    // .range(["#ffffb2","#fed976","#feb24c","#fd8d3c","#f03b20","#bd0026"]);
    .range(['#a6611a','#dfc27d','#f5f5f5','#80cdc1','#018571']);
d3.queue()
  .defer(d3.json, "climate.json")
  .defer(d3.csv, "tidy_drought_data.csv")
  .await(ready);

function ready(err, map, data) {
  if (err) throw "error loading data";

  data.forEach(function(d) {
    d.val = +d.val;
  })

  console.log(map);
  var ext = d3.extent(data, function(d) {
    return d.val
  })
  console.log(ext);
  //[0.01-9.79]

  var climateDiv = topojson.feature(map, map.objects.GIS);

  var drynessById = {};
  data.forEach(function(d) {
    drynessById[d.id] = +d.val;
  })

  var geoPathGenerator = d3.geoPath()
    .projection(d3.geoAlbersUsa().fitSize([width, height],climateDiv));

  console.log(climateDiv.features[0].properties.CLIMDIV);

  var divPaths = svg.selectAll(".cDivs")
      .data(climateDiv.features)
      .enter().append("path")
      .attr("class", "cDivs")
      .attr("d", function(d) {
        return geoPathGenerator(d);
      })
      .style("fill", function(d) {
        var values = drynessById[d.properties.CLIMDIV]
        return threshold(values);
      })
}



</script>
